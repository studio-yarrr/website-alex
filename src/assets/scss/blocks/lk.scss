.lk {
  margin-top: 3rem;
  display: grid;
  grid-template-columns: 30rem 1fr;
  gap: 2.7rem;
}
.out + main {
  .lk-nav {
    top: 2rem;
  }
}
.lk-nav {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  padding: 2.7rem 3rem;
  background-color: var(--lgrey-2);
  margin-top: 1.3rem;
  height: min-content;
  position: sticky;
  top: 12rem;
  transition: top .3s;
  transform: translate3d(0, 0, 0);
}
.lk-link {
  font-weight: 700;
  font-size: 1.8rem;
  line-height: 122%;
  color: var(--grey);
  a {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    transition: color .3s;
  }
  @media (hover: hover) and (pointer: fine) {
  &:hover {
    color: var(--orange);
    svg {
      fill: var(--orange);
    }
  }
  }
  &.active {
    color: var(--orange);
    svg {
      fill: var(--orange);
    }
  }

  svg {
    width: 1.8rem;
    height: 1.7rem;
    fill: var(--grey);
  }
}

.lk-main {
  min-height: 100vh;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: min-content;
  column-gap: 3.2rem;
}
.lk-profile {
  margin-top: 3rem;
  display: grid;
  grid-template-columns: 14.4rem repeat(2, 1fr);
  gap: 2rem;
}
.lk-block {
  padding: 2.3rem 2.5rem 2.4rem;
  background-color: var(--lgrey-2);
}

.lk-img {
  width: 14.4rem;
  height: 14.4rem;
  border-radius: 0.2rem;
  grid-row: 2 span;
}

.lk-name {
  display: flex;
  gap: 1.8rem;
  align-items: center;
}

.edit-btn {
  width: 1.9rem;
  height: 1.9rem;
  fill: var(--grey);
  @media (hover: hover) and (pointer: fine) {
  &:hover {
    fill: var(--orange);
  }
  }
}

.lk-profleft {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.lk-profright {
  display: flex;
  flex-direction: column;
  gap: 1.7rem;
  grid-column: 3 / 4;
  grid-row: 2 / 3;
}

.lk-icon {
  width: 2.4rem;
  height: 2.4rem; 
}

.lk-item {
  display: flex;
  gap: 1.9rem;
}

.lk-changepass {
  text-align: start;
  text-decoration: underline;
  text-decoration-skip-ink: none;
  transition: text-decoration-color .3s;
  @media (hover: hover) and (pointer: fine) {
  &:hover {
    text-decoration-color: transparent;
  }
  }
}
.col-span-2 {
  grid-column: 2 span;
}

.lk-notification {
  display: flex;
  flex-direction: column;
  margin-top: 5rem;
  gap: 2rem;
}

.notification-list {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}
.lk-label {
  display: flex;
  gap: 1.6rem;
  align-items: center;
  cursor: pointer;
  @media (hover: hover) and (pointer: fine) {
  &:hover {
    .lk-span {color: var(--orange);}
  }
  }
  input {
    position: absolute;
    opacity: 0;
    pointer-events: none;
    &:checked + .lk-box {
      background-color: var(--orange);
    }
  }
}
.lk-box {
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 100%;
  flex: 0 0 auto;
  border: 0.2rem solid var(--grey);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color .3s;
  &::before {
    content: '';
    width: 0.4rem;
    height: 0.4rem;
    background-color: var(--grey);
    border-radius: 100%;
    flex: 0 0 auto;
    display: block;
  }
}
.lk-span {
  transition: color .3s;
}

.mt-10 {
  margin-top: 1rem;
}
.mt-17 {
  margin-top: 1.7rem;
}
.mt-30 {
  margin-top: 3rem;
}
.mt-48 {
  margin-top: 4.8rem;
}
.mt-50 {
  margin-top: 5rem;
}

.justify-between {
  display: flex;
  justify-content: space-between;
}

.lk-balance {
  font-weight: 500;
  font-size: 3.2rem;
}

.lk-payleft {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
  svg {
    width: 7.2rem;
    height: 7.2rem;
    fill: var(--grey);
  }
}

.lk-paytext {
  margin-top: 1rem;
}

.lk-payment {
  display: flex;
  gap: 5.6rem;
  align-items: center;
  min-height: 19.5rem;
}

.lk-finance {
  min-height: 19.5rem;
}

.rec-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.rec-buttons {
  display: flex;
  gap: 1.5rem;
  button {
    width: 2.4rem;
    height: 2.4rem;
    fill: var(--grey);
    &:first-child {
      width: 2rem;
      height: 2;
    }
    @media (hover: hover) and (pointer: fine) {
    &:hover {
      fill: var(--orange);
    }
    }
  }
}

.rec-list {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}